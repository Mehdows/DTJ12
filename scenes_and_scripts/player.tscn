[gd_scene load_steps=11 format=3 uid="uid://b7pybyh2gku08"]

[ext_resource type="Resource" uid="uid://cwf53vg7bwmhe" path="res://resources/main_character.tres" id="1_23chc"]
[ext_resource type="PackedScene" uid="uid://3jomb47e456g" path="res://scenes_and_scripts/hurt_box.tscn" id="2_e8vqu"]
[ext_resource type="Texture2D" uid="uid://chsqe3iur5gkr" path="res://assets/character_tileset/Sword.png" id="2_onrkg"]
[ext_resource type="Script" uid="uid://d1wnnuq882a47" path="res://scenes_and_scripts/clamped_follow_camera.gd" id="3_44uky"]
[ext_resource type="PackedScene" uid="uid://dn5ik34crhhyi" path="res://scenes_and_scripts/health_component.tscn" id="4_f8gj8"]

[sub_resource type="GDScript" id="GDScript_onrkg"]
script/source = "class_name PlayerCharacter extends CharacterBody2D

const HIT_BOX = preload(\"res://scenes_and_scripts/hit_box.tscn\")
const LASER = preload(\"res://scenes_and_scripts/laser.tscn\")

@onready var health_component: Node2D = $HealthComponent
@onready var collision_shape_2d: CollisionShape2D = $HurtBox/CollisionShape2D

@export var speed = 200
@export var damage = 20
@export var attack_distance = 30
@export var dash_speed = 500
@export var dash_damage = 50
@export var dash_attack_size = 30
@export var dash_duration = 0.2
@export var dash_cooldown = 1.0
@export var ability_1_cooldown = 5.0
@export var resource: PlayerResource

var is_dashing = false
var dash_timer = 0.0
var dash_cooldown_timer = 0.0
var dash_direction = Vector2.ZERO
var can_use_ability_1 = true
var dash_attack: Area2D = null

func _ready() -> void:
	collision_shape_2d.shape = resource.shape

func _input(event: InputEvent) -> void:
	if event.is_action_pressed(\"attack\"):
		var attack = HIT_BOX.instantiate()
		attack.collision_layer = 1
		attack.damage = damage
		attack.get_child(0).shape = resource.attack_shape
		attack.get_child(0).shape.radius = resource.attack_radius
		
		var mouse_position = get_global_mouse_position()
		var local_mouse_pos = mouse_position - global_position  # Convert to local space
		var attack_position = local_mouse_pos.normalized() * min(local_mouse_pos.length(), attack_distance)
		
		attack.position = attack_position
		attack.rotation = attack_position.angle()
		add_child(attack)
		
		var timer := Timer.new()
		timer.wait_time = 0.2  # Adjust damage interval as needed
		timer.autostart = true
		timer.one_shot = true
		timer.connect(\"timeout\", Callable(self, \"_remove_attack\").bind(attack, timer))
		add_child(timer)
	elif event.is_action_pressed(\"ability_1\"):
		ability_1()
		
func ability_1() -> void:
	if not can_use_ability_1:
		return
		
	var laser = LASER.instantiate()
	laser.global_position = global_position  # Start at player
	laser.direction = (get_global_mouse_position() - global_position).normalized()
	add_sibling(laser)  # Add to the same level as the player (not as a child, so it moves freely)
	
	# Start cooldown
	can_use_ability_1 = false
	var cooldown_timer = Timer.new()
	cooldown_timer.wait_time = ability_1_cooldown
	cooldown_timer.one_shot = true
	cooldown_timer.connect(\"timeout\", Callable(self, \"_reset_ability_1_cooldown\"))
	add_child(cooldown_timer)
	cooldown_timer.start()
	
func _reset_ability_1_cooldown():
	can_use_ability_1 = true
		
func _remove_attack(attack,timer):
	attack.queue_free()
	timer.queue_free()

func get_input():
	if not is_dashing:
		var input_direction = Input.get_vector(\"move_left\", \"move_right\", \"move_up\", \"move_down\")
		velocity = input_direction * speed
		
		if Input.is_action_just_pressed(\"dash\") and dash_cooldown_timer <= 0:
			start_dash(input_direction)

func start_dash(direction):
	if direction == Vector2.ZERO:
		return
	
	is_dashing = true
	dash_timer = dash_duration
	dash_cooldown_timer = dash_cooldown
	dash_direction = direction
	velocity = dash_direction * dash_speed
	
	# Disable the hurtbox (player is invincible)
	$HurtBox.set_deferred(\"monitorable\", false)

	# Create a hitbox for dash damage
	dash_attack = HIT_BOX.instantiate()
	dash_attack.collision_layer = 1
	dash_attack.damage = dash_damage
	dash_attack.get_child(0).shape = resource.attack_shape
	var shape = dash_attack.get_child(0).shape
	shape.radius = dash_attack_size
	dash_attack.position = Vector2.ZERO  # Centered on player
	add_child(dash_attack)

func _physics_process(_delta):
	if is_dashing:
		dash_timer -= _delta
		if dash_timer <= 0:
			is_dashing = false
			velocity = Vector2.ZERO
			$HurtBox.set_deferred(\"monitorable\", true)
			
			if dash_attack:
				dash_attack.queue_free()
				dash_attack = null
	else:
		dash_cooldown_timer = max(0, dash_cooldown_timer - _delta)
		get_input()

	move_and_slide()

var active_areas: Dictionary = {}

func _on_hurt_box_area_entered(area: Area2D) -> void:
	if area not in active_areas:
		var timer := Timer.new()
		timer.wait_time = 1.0  # Adjust damage interval as needed
		timer.autostart = true
		timer.one_shot = false
		timer.connect(\"timeout\", Callable(self, \"_deal_damage\").bind(area))
		add_child(timer)
		
		health_component.take_damage(area.damage)  # Deal initial damage immediately
		active_areas[area] = timer

func _on_hurt_box_area_exited(area: Area2D) -> void:
	if area in active_areas:
		active_areas[area].queue_free()  # Remove and free the timer
		active_areas.erase(area)

func _deal_damage(area: Area2D) -> void:
	if area in active_areas:
		health_component.take_damage(area.damage)


func _on_health_component_death() -> void:
	$\".\".queue_free() #TEMP
"

[sub_resource type="AtlasTexture" id="AtlasTexture_i3pqv"]
atlas = ExtResource("2_onrkg")
region = Rect2(0, 0, 68, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_hqtel"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_i3pqv")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_f8gj8"]

[sub_resource type="CircleShape2D" id="CircleShape2D_f8gj8"]
radius = 6.08276

[node name="Player" type="CharacterBody2D" groups=["player"]]
script = SubResource("GDScript_onrkg")
resource = ExtResource("1_23chc")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_hqtel")

[node name="HurtBox" parent="." instance=ExtResource("2_e8vqu")]

[node name="CollisionShape2D" parent="HurtBox" index="0"]
shape = SubResource("CapsuleShape2D_f8gj8")

[node name="Camera2D" type="Camera2D" parent="."]
z_index = 1
zoom = Vector2(3, 3)
script = ExtResource("3_44uky")

[node name="HealthComponent" parent="." instance=ExtResource("4_f8gj8")]

[node name="PlayerFeetArea" type="Area2D" parent="." groups=["player"]]
collision_layer = 32
collision_mask = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="PlayerFeetArea"]
position = Vector2(-2, 13)
shape = SubResource("CircleShape2D_f8gj8")
debug_color = Color(1.39579e-06, 0.645745, 0.253248, 0.42)

[connection signal="area_entered" from="HurtBox" to="." method="_on_hurt_box_area_entered"]
[connection signal="area_exited" from="HurtBox" to="." method="_on_hurt_box_area_exited"]
[connection signal="death" from="HealthComponent" to="." method="_on_health_component_death"]

[editable path="HurtBox"]
